#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass report
\begin_preamble
\usepackage{culmus}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Introduction to AI 
\end_layout

\begin_layout Author
Yaacov Vaksman 316153261
\end_layout

\begin_layout Author
Pietro Brach 123456789
\end_layout

\begin_layout Chapter*
Theorterical Part:
\end_layout

\begin_layout Section*
Question 1:
\end_layout

\begin_layout Standard

\bar under
Pros:
\end_layout

\begin_layout Itemize
Very easy to calculate (computational good)
\end_layout

\begin_layout Itemize
It's good indication for the first part of the game- when you have to stop
 the opponent from completing a mill.
\end_layout

\begin_layout Standard

\bar under
Cons:
\end_layout

\begin_layout Itemize
This heuristic doesn’t give a very good indication of the position evaluation:
\end_layout

\begin_deeper
\begin_layout Itemize
It's don't take into account the number of soldiers each player has.
\end_layout

\begin_layout Itemize
It's don't take into account the fact that the mobility is important in
 this game- a player which can't perform a move is losing
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
Jacob TODO:copy here an examples and explain
\end_layout

\begin_layout Section*
Question 2
\end_layout

\begin_layout Standard
We will define the next heuristic:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
h(s)=Eval(White)-Eval(Black)
\]

\end_inset


\end_layout

\begin_layout Standard
if 
\begin_inset Formula $h(s)>0$
\end_inset

 white is better, else black is better.
\end_layout

\begin_layout Standard
We will define the evaluation fuction of each player by a weigheted sum:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Eval(Player)=\sum_{i=1}c_{i}R_{i}
\]

\end_inset


\end_layout

\begin_layout Standard
R1= Number of closed mills: +1 If a mill was closed in the last move by
 the player 
\end_layout

\begin_layout Standard
R2= Number of mills
\end_layout

\begin_layout Standard
R3 = Number of blocked opponent pieces- pieces which don’t have an empty
 adjacent point
\end_layout

\begin_layout Standard
R4= Number of pieces 
\end_layout

\begin_layout Standard
R5= Number of 2-piece configuration (2 mans and one empty in a line) 
\end_layout

\begin_layout Standard
R6= Number of 3-piece configurations (A 3-piece configuration is one to
 which a piece can be added in which one of two ways to close a mills)
\end_layout

\begin_layout Standard

\series bold
Jacob TODO: rewriting the next paragraph (currently it's just copied from
 web)
\end_layout

\begin_layout Standard
R7= Double morris: Difference between number of yours and yours opponent’s
 double morrises (A double morris is one in which two morrises share a common
 piece)
\end_layout

\begin_layout Standard
R8=Winning configuration: 1 if the state is winning for the player, -1 if
 losing, 0 otherwise For the particular contest settings (elimination with
 the player having more pieces winning if neither side could force a win
 so there was a strong aversion to sacrificing material) and bot settings
 (depth limited to 8 and branching factor limited to 20; at each step, top
 20 moves sorted by the evaluation function were selected), I found the
 following feature combinations to work well (‘(1)’ represents the first
 feature: Closed Morris and so on) 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The motivation of using that heuristic is from a peper : 
\begin_inset Quotes eld
\end_inset

Nine Men’s Morris: Evaluation Functions
\begin_inset Quotes erd
\end_inset

 by: Simona-Alexandra PETCU, Stefan HOLBAN
\end_layout

\begin_layout Standard

\series bold
Jacob TODO: explain about coeeficients.
 Explain that for diffrent part of the game we use diffrent
\series default
 
\begin_inset Formula $c_{i}$
\end_inset


\end_layout

\begin_layout Standard

\series bold
In practice we don't have to use that complex heuristic, we can choose only
 4 parameters between the 8 described above....
\end_layout

\begin_layout Section*
Question 3
\end_layout

\begin_layout Description
\begin_inset Graphics
	filename ../../../../Desktop/Intro to AI/HW2/report_Images/image3_0.png
	scale 60

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Description

\end_layout

\begin_layout Description
a) The advantage of Alpha-beta pruning algorithm is that it decrease the
 number of nodes that evaluated by an Minimax algorithm, although the selected
 move will be the same as in the regular minimax algorithm.
\begin_inset Newline newline
\end_inset

By using the pruning, branches of the search tree can be eliminated, and
 a deeper search can be performed.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Description

\series bold
TODO explain the algorithm.
\end_layout

\begin_layout Description
b) (from Lecture No.5 slide 35) 
\begin_inset Newline newline
\end_inset

Optimal pruning happens when the extreme (min./max) value of every node is
 found first: 
\begin_inset Newline newline
\end_inset

In max nodes the highest minimax value is found in the first child
\begin_inset Newline newline
\end_inset

In min nodes the lowest minimax value is found in the first child 
\end_layout

\begin_layout Description
c)
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Section*
Question 4
\end_layout

\begin_layout Standard
Alpha beta pruning with some heuristic gave us exactly the same result (move)
 as minimax (with less calculations)
\end_layout

\begin_layout Standard
minimax algorithm with limited resources is as good as it's heuristic....
\end_layout

\begin_layout Standard
Minimax strategy is inefficient, since it discourages taking any risks,
 no matter how high the reward may be- It's takes the safe routes.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Section*
Question 5
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
a) 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
c)
\end_layout

\begin_layout Standard
TODO
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Section*
Question 6
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Section*
Question 7
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ../../../../Desktop/Intro to AI/HW2/report_Images/7_0.png
	scale 60

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
a) The expectimax of a chance node is calculated by a weighted sum of the
 utility and the probability to get it.
\begin_inset Newline newline
\end_inset


\begin_inset Formula $U(B)=0.3\cdot5+0.7\cdot1=2.2$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $U(C)=0.4\cdot2+0.2\cdot3+0.4\cdot9=5$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Formula $U(D)=0.1\cdot4+0.9\cdot7=6.7$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) The max operator takes the path with the best value at the chance node:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $U(A)=U(argmax(U(i))=U(D)=6.7$
\end_inset


\begin_inset Newline newline
\end_inset

 Thus action D
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
c) NO we can't perform an alpha-beta pruning in an expectimax nodes.
\begin_inset Newline newline
\end_inset


\series bold
Jacob TODO: Wtire it better:
\series default

\begin_inset Newline newline
\end_inset

The reason is that until we haven't exposed all the nodes we can't calculate
 the expectimax value.
\begin_inset Newline newline
\end_inset


\series bold
JACOB TODO: Bring an example
\end_layout

\begin_layout Section*
Question 8
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Section*
Question 9
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Section*
Question 10
\end_layout

\begin_layout Standard
TODO
\end_layout

\begin_layout Chapter*
Wet Part:
\end_layout

\end_body
\end_document
